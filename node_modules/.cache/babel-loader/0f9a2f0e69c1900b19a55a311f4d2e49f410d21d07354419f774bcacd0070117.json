{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sai\\\\Desktop\\\\Portfolio\\\\template1\\\\src\\\\Projects.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Projects.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Projects() {\n  _s();\n  const ProjectData = [{\n    title: \"Stock price prediction using Ensemble Machine Learning Techniques and Sentimental analysis\",\n    domain: \"Machine Learning\",\n    duration: \"04-2024 - 07-2024\",\n    keywords: \"one, two, three\",\n    description: \"This case study explores the application of ensemble machine learning techniques in combination with sentiment analysis for stock price prediction. By utilizing Long Short-Term Memory (LSTM), Support Vector Machine (SVM), XGBoost, and Random Forest models, and integrating sentiment analysis, this project aims to provide a comprehensive analysis of their effectiveness in predicting stock prices\",\n    technologies: \" React ,Spring Boot, Java, Python, ML Libraries\"\n  }, {\n    title: \" RoyalTheorem - An eCommerce server side application using Microservices architecture \",\n    domain: \"Machine Learning\",\n    duration: \"04-2024 - 07-2024\",\n    keywords: \"one, two, three\",\n    description: \"This project involves the development of a Spring Boot-based microservices architecture for managing various aspects of a design and order system. The system\" + \"comprises multiple microservices, including Designer Service, User Service, Krders Service, and Design Service. Additionally, it employs Net'ix Eureka Server for\" + \"service registry and discovery, Spring Cloud Gateway as the API gateway, and Redis for caching purposes. •ey tasks included designing RESTful APIs, implementing \" + \"microservices using Spring Boot, managing service-to-service communication, and ensuring fault tolerance. I used Postman tool to test each REST API and service to service communication\",\n    technologies: \"Java ,Spring Boot, Net'ix Eureka Server, Redis cloud, Spring\" + \"Cloud Gateway, Spring data JPA, MySQL, MongoDB\"\n  }, {\n    title: \"BlockForge API: Crafting Blockchain Networks and Deploying Smart Contracts with Ease\",\n    domain: \"Blckchain\",\n    duration: \"04-2024 - 07-2024\",\n    keywords: \"one, two, three\",\n    description: \"In this groundbreaking project, our team is focused on developing an advanced API\" + \"(Application Programming Interface) for the seamless creation and deployment of\" + \"Blockchain networks and smart contracts. This endeavor aims to revolutionize the\" + \"way blockchain technology is accessed and utilized, making it more accessible and\" + \"user-friendly for businesses and developers. Using the BlockForge API, developers\" + \"can focus on business logic rather than focusing on implementing complex and\" + \"time taking blockchain technology. BlockForge API automates the creation and\" + \"deployment of blockchain and the developer just need to choose type of blockchain\" + \"network, consensus algorithm, hashing techniques ,network type, etc that fosters the\" + \"blockchain development\",\n    technologies: \" React ,Spring Boot, Java, Python, ML Libraries\"\n  }];\n  const [Project, setProject] = useState();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Projects\",\n    name: \"projects\",\n    children: ProjectData.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Project\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ProjectLeft\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Title\",\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Details\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Domain- \", item.domain]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Duration- \", item.duration]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Keywords- \", item.keywords]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ProjectRight\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Description\",\n          children: item.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Tech\",\n          children: [\"Technologies- \", item.technologies]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Projects, \"s68SO7Sbo2WqufQ9RM1gOC8dy2k=\");\n_c = Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Projects","_s","ProjectData","title","domain","duration","keywords","description","technologies","Project","setProject","className","name","children","map","item","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sai/Desktop/Portfolio/template1/src/Projects.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport './Projects.css'\r\nexport default function Projects() {\r\n    const ProjectData=[\r\n        {\r\n            title:\"Stock price prediction using Ensemble Machine Learning Techniques and Sentimental analysis\",\r\n            domain:\"Machine Learning\",\r\n            duration:\"04-2024 - 07-2024\",\r\n            keywords:\"one, two, three\",\r\n            description:\"This case study explores the application of ensemble machine learning techniques in combination with sentiment analysis for stock price prediction. By utilizing Long Short-Term Memory (LSTM), Support Vector Machine (SVM), XGBoost, and Random Forest models, and integrating sentiment analysis, this project aims to provide a comprehensive analysis of their effectiveness in predicting stock prices\",\r\n            technologies:\" React ,Spring Boot, Java, Python, ML Libraries\"\r\n        },\r\n        {\r\n            title:\" RoyalTheorem - An eCommerce server side application using Microservices architecture \",\r\n            domain:\"Machine Learning\",\r\n            duration:\"04-2024 - 07-2024\",\r\n            keywords:\"one, two, three\",\r\n            description:\"This project involves the development of a Spring Boot-based microservices architecture for managing various aspects of a design and order system. The system\"+ \r\n\"comprises multiple microservices, including Designer Service, User Service, Krders Service, and Design Service. Additionally, it employs Net'ix Eureka Server for\"+ \r\n\"service registry and discovery, Spring Cloud Gateway as the API gateway, and Redis for caching purposes. •ey tasks included designing RESTful APIs, implementing \"+\r\n\"microservices using Spring Boot, managing service-to-service communication, and ensuring fault tolerance. I used Postman tool to test each REST API and service to service communication\",\r\n            technologies:\"Java ,Spring Boot, Net'ix Eureka Server, Redis cloud, Spring\"+ \r\n\"Cloud Gateway, Spring data JPA, MySQL, MongoDB\"\r\n        },\r\n        {\r\n            title:\"BlockForge API: Crafting Blockchain Networks and Deploying Smart Contracts with Ease\",\r\n            domain:\"Blckchain\",\r\n            duration:\"04-2024 - 07-2024\",\r\n            keywords:\"one, two, three\",\r\n            description:\"In this groundbreaking project, our team is focused on developing an advanced API\"+ \r\n\"(Application Programming Interface) for the seamless creation and deployment of\"+ \r\n\"Blockchain networks and smart contracts. This endeavor aims to revolutionize the\"+ \r\n\"way blockchain technology is accessed and utilized, making it more accessible and\"+ \r\n\"user-friendly for businesses and developers. Using the BlockForge API, developers\"+ \r\n\"can focus on business logic rather than focusing on implementing complex and\"+ \r\n\"time taking blockchain technology. BlockForge API automates the creation and\"+ \r\n\"deployment of blockchain and the developer just need to choose type of blockchain\"+ \r\n\"network, consensus algorithm, hashing techniques ,network type, etc that fosters the\"+ \r\n\"blockchain development\",\r\n            technologies:\" React ,Spring Boot, Java, Python, ML Libraries\"\r\n        }\r\n\r\n    ]\r\n    const[Project,setProject]=useState()\r\n  return (\r\n    <div className='Projects' name=\"projects\">\r\n        {ProjectData.map(item=>(\r\n            <div className='Project'>\r\n                <div className='ProjectLeft'>\r\n                    <div className='Title'>{item.title}</div>\r\n                    <div className='Details'>\r\n                    <ul>\r\n                        <li>Domain- {item.domain}</li>\r\n                        <li>Duration- {item.duration}</li>\r\n                        <li>Keywords- {item.keywords}</li>\r\n                    </ul>\r\n                    </div>\r\n                </div>\r\n                <div className='ProjectRight'>\r\n                    <div className='Description'>{item.description}</div>\r\n                    <div className='Tech'>Technologies- {item.technologies}</div>\r\n                </div>        \r\n            </div>\r\n        ))}\r\n        \r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}