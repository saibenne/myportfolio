{"ast":null,"code":"'use strict';\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\nconst Collection = require('./collection');\nconst parseType = require('./parse-type');\nclass List extends Collection {\n  // the literal string represents Type\n\n  static setElementType(Type) {\n    const typeInfo = parseType(Type);\n    const type = typeInfo.type,\n      invalid = typeInfo.invalid;\n    if (type === 'map' || type === 'list' || invalid) throw new TypeError(`Invalid element type ${type} in list`);\n    this.type = type;\n    this.Type = typeInfo.Type;\n  } // the class(constructor function) of element type\n\n  static derive(SubClass) {\n    SubClass.Type = null;\n    SubClass.type = null;\n    SubClass.setElementType = this.setElementType;\n    if (!SubClass.derive) SubClass.derive = this.derive;\n  }\n  init() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super.init(options);\n    const store = options.store;\n    var _options$value = options.value;\n    const value = _options$value === undefined ? [] : _options$value;\n\n    // initiate\n\n    var _constructor = this.constructor;\n    const type = _constructor.type,\n      Type = _constructor.Type;\n    if (type === 'model') Type.bindStore(store);\n    this._data = value.map((element, index) => this.parseInitKeyValue(index, element));\n  }\n  keys() {\n    return Object.keys(this._data);\n  }\n  has(key) {\n    // eslint-disable-line class-methods-use-this\n    const type = typeof key;\n    if (type === 'string') {\n      key = parseInt(key, 10);\n      if (isNaN(key)) return false;\n    } else if (typeof key !== 'number') return false;\n    if (key < 0) {\n      key += this._data.length;\n      if (key < 0) return false;\n    }\n    return true;\n  }\n\n  // normalize and validate the value\n  validate(key, value) {\n    // eslint-disable-line class-methods-use-this\n    return value;\n  }\n  getKeyDefinition(key) {\n    // eslint-disable-line class-methods-use-this\n    var _constructor2 = this.constructor;\n    const type = _constructor2.type,\n      Type = _constructor2.Type;\n    return {\n      type: type,\n      Type: Type\n    };\n  }\n  readKeyValue(key) {\n    const len = this._data.length;\n    if (key < 0) key += len;\n    if (key >= len) {\n      return null;\n    } else {\n      return super.readKeyValue(key);\n    }\n  }\n  writeKeyValue(key, value) {\n    super.writeKeyValue(key, value);\n    const len = this._data.length;\n    if (key < 0) key = len + key;\n    if (key >= len) {\n      this._data = [].concat(_toConsumableArray(this._data));\n      this._data[key] = value;\n    } else {\n      this._data = [].concat(_toConsumableArray(this._data.slice(0, key)), [value], _toConsumableArray(this._data.slice(key + 1)));\n    }\n  }\n}\nList.Type = null;\nList.type = null;\nfunction createList(Type) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  class DerivedList extends List {}\n  List.derive(DerivedList);\n  DerivedList.setElementType(Type);\n  Type = null;\n  return DerivedList;\n}\nmodule.exports = {\n  createList: createList,\n  List: List\n};","map":{"version":3,"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","from","Collection","require","parseType","List","setElementType","Type","typeInfo","type","invalid","TypeError","derive","SubClass","init","options","arguments","undefined","store","_options$value","value","_constructor","constructor","bindStore","_data","map","element","index","parseInitKeyValue","keys","Object","has","key","parseInt","isNaN","validate","getKeyDefinition","_constructor2","readKeyValue","len","writeKeyValue","concat","slice","createList","DerivedList","module","exports"],"sources":["C:/Users/sai/Desktop/Portfolio/template1/node_modules/use-state/dist/structures/list.js"],"sourcesContent":["'use strict';\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }\n\nconst Collection = require('./collection');\nconst parseType = require('./parse-type');\n\nclass List extends Collection {\n  // the literal string represents Type\n\n  static setElementType(Type) {\n    const typeInfo = parseType(Type);\n    const type = typeInfo.type,\n          invalid = typeInfo.invalid;\n\n    if (type === 'map' || type === 'list' || invalid) throw new TypeError(`Invalid element type ${ type } in list`);\n\n    this.type = type;\n    this.Type = typeInfo.Type;\n  } // the class(constructor function) of element type\n\n\n  static derive(SubClass) {\n    SubClass.Type = null;\n    SubClass.type = null;\n    SubClass.setElementType = this.setElementType;\n    if (!SubClass.derive) SubClass.derive = this.derive;\n  }\n\n  init() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    super.init(options);\n    const store = options.store;\n    var _options$value = options.value;\n    const value = _options$value === undefined ? [] : _options$value;\n\n    // initiate\n\n    var _constructor = this.constructor;\n    const type = _constructor.type,\n          Type = _constructor.Type;\n\n    if (type === 'model') Type.bindStore(store);\n\n    this._data = value.map((element, index) => this.parseInitKeyValue(index, element));\n  }\n\n  keys() {\n    return Object.keys(this._data);\n  }\n\n  has(key) {\n    // eslint-disable-line class-methods-use-this\n    const type = typeof key;\n    if (type === 'string') {\n      key = parseInt(key, 10);\n      if (isNaN(key)) return false;\n    } else if (typeof key !== 'number') return false;\n\n    if (key < 0) {\n      key += this._data.length;\n      if (key < 0) return false;\n    }\n    return true;\n  }\n\n  // normalize and validate the value\n  validate(key, value) {\n    // eslint-disable-line class-methods-use-this\n    return value;\n  }\n\n  getKeyDefinition(key) {\n    // eslint-disable-line class-methods-use-this\n    var _constructor2 = this.constructor;\n    const type = _constructor2.type,\n          Type = _constructor2.Type;\n\n    return { type: type, Type: Type };\n  }\n\n  readKeyValue(key) {\n    const len = this._data.length;\n    if (key < 0) key += len;\n    if (key >= len) {\n      return null;\n    } else {\n      return super.readKeyValue(key);\n    }\n  }\n\n  writeKeyValue(key, value) {\n    super.writeKeyValue(key, value);\n\n    const len = this._data.length;\n    if (key < 0) key = len + key;\n    if (key >= len) {\n      this._data = [].concat(_toConsumableArray(this._data));\n      this._data[key] = value;\n    } else {\n      this._data = [].concat(_toConsumableArray(this._data.slice(0, key)), [value], _toConsumableArray(this._data.slice(key + 1)));\n    }\n  }\n}\n\nList.Type = null;\nList.type = null;\nfunction createList(Type) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  class DerivedList extends List {}\n  List.derive(DerivedList);\n  DerivedList.setElementType(Type);\n  Type = null;\n\n  return DerivedList;\n}\n\nmodule.exports = { createList: createList, List: List };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}